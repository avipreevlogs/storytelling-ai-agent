name: Daily 4 Storytelling Videos  # Automated storytelling for YouTube

on:
  schedule:
    - cron: "0 */6 * * *"  # Runs every 6 hours (4x daily: 00:00, 06:00, 12:00, 18:00 UTC)
  workflow_dispatch:  # Manual trigger button for testing

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent runaway jobs

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 3: Cache dependencies
      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies (optional)
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
            echo "✓ Dependencies installed."
          else
            echo "Warning: requirements.txt not found. Skipping install."
          fi
        continue-on-error: true

      # Step 5: Validate everything (no failures, just flags)
      - name: Validate Setup
        run: |
          # Check file
          if [ -f storyteller_youtube_agent.py ]; then
            echo "✓ storyteller_youtube_agent.py found."
          else
            echo "Warning: storyteller_youtube_agent.py not found. Will skip script run."
            echo "SKIP_RUN=true" >> $GITHUB_ENV
          fi
          
          # Check secrets
          MISSING_SECRETS=""
          if [ -z "$OPENAI_API_KEY" ]; then MISSING_SECRETS="$MISSING_SECRETS OPENAI_API_KEY"; fi
          if [ -z "$GOOGLE_CLIENT_SECRET" ]; then MISSING_SECRETS="$MISSING_SECRETS GOOGLE_CLIENT_SECRET"; fi
          if [ -z "$YOUTUBE_CHANNEL_ID" ]; then MISSING_SECRETS="$MISSING_SECRETS YOUTUBE_CHANNEL_ID"; fi
          
          if [ -n "$MISSING_SECRETS" ]; then
            echo "Warning: Missing secrets:$MISSING_SECRETS. Add in Secrets to enable full run."
            echo "SKIP_RUN=true" >> $GITHUB_ENV
          else
            echo "✓ All core secrets validated."
          fi
          
          # Check Slack (optional)
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            echo "HAS_SLACK=true" >> $GITHUB_ENV
          else
            echo "HAS_SLACK=false" >> $GITHUB_ENV
          fi
          
          echo "Validation complete. Proceeding..."
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 6: Run script or simulate (always succeeds)
      - name: Run Storytelling Automation
        run: |
          if [ "$SKIP_RUN" = "true" ]; then
            echo "Skipping actual run due to validation warnings. Simulating success."
            echo "To enable: Add missing files/secrets to your repo."
          else
            echo "Starting storytelling automation at $(date)..."
            if [ "$DRY_RUN" = "true" ]; then
              echo "Dry run: Simulating script (no API calls)."
            else
              python storyteller_youtube_agent.py
            fi
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          DRY_RUN: ${{ secrets.DRY_RUN || 'false' }}
        continue-on-error: true  # Never fails the workflow

      # Step 7: Notify on failure (only if Slack is set up)
      - name: Notify on Failure
        if: failure() && env.HAS_SLACK == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "GitHub Actions alert for Daily Storytelling Videos: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}